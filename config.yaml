# Snapshot Downloader Configuration

# URL for the snapshot to download (for single file snapshots)
# Supports HTTP/HTTPS URLs and S3 URLs (s3://bucket/path/to/file)
snapshot_url: "https://example.com/cosmos-snapshot.tar.gz"
# S3 example:
# snapshot_url: "s3://my-bucket/snapshots/cosmos-snapshot.tar.gz"

# URLs for multi-part snapshots (alternative to snapshot_url)
# If snapshot_urls is provided, it will be used instead of snapshot_url
# snapshot_urls:
#   - "https://example.com/cosmos-snapshot.part001.tar.gz"
#   - "https://example.com/cosmos-snapshot.part002.tar.gz"
#   - "https://example.com/cosmos-snapshot.part003.tar.gz"

# Final filename for multi-part snapshots (REQUIRED when using snapshot_urls)
# This specifies what the final concatenated file should be called
# snapshot_filename: "cosmos-snapshot.tar.gz"

# URL for the binary to download
# Supports HTTP/HTTPS URLs and S3 URLs (s3://bucket/path/to/file)
binary_url: "https://example.com/cosmos-binary.tar.gz"
# S3 example:
# binary_url: "s3://my-bucket/binaries/cosmos-binary.tar.gz"

# Relative path to the binary within the workspace directory
# This is used to locate the binary after extraction
binary_relative_path: "bin/gaiad"

# Chain ID for the Cosmos network
chain_id: "cosmoshub-4"

# Moniker (node name) to use when initializing
moniker: "my-cosmos-node"

# Custom home directory for the chain (optional)
# If not specified, defaults to ~/.snapshot-downloader/workspace/home
# chain_home_dir: "/mnt/data/cosmos-home"

# URL for the addrbook.json file (optional)
# If specified, this file will be downloaded and placed in the config directory
# Supports HTTP/HTTPS URLs and S3 URLs (s3://bucket/path/to/file)
# addrbook_url: "https://example.com/addrbook.json"
# S3 example:
# addrbook_url: "s3://my-bucket/config/addrbook.json"

# S3 configuration (optional)
# AWS credentials are obtained from the default credential chain:
# - Environment variables (AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_SESSION_TOKEN)
# - AWS credentials file (~/.aws/credentials)
# - IAM role for EC2 instances or ECS tasks
# s3:
#   # AWS region (optional, e.g., "us-east-1")
#   region: "us-east-1"

# Download retry configuration (optional)
# These settings control how downloads are retried when they fail or are interrupted
download_retry:
  # Maximum number of retry attempts (default: 5)
  max_retries: 5
  # Initial delay between retries in seconds (default: 1)
  initial_delay_secs: 1
  # Maximum delay between retries in seconds (default: 300 = 5 minutes)
  max_delay_secs: 300
  # Exponential backoff multiplier (default: 2.0)
  backoff_multiplier: 2.0

# Command to execute after snapshot download completes (optional)
# This will run only after snapshot download, not after binary download
# post_snapshot_download_command: "echo 'Snapshot download completed'"

# Command to execute after snapshot extraction (optional)
# This will only run if a snapshot is successfully extracted
post_snapshot_extract_command: "echo 'Snapshot extraction completed'"

# Command to execute before starting the cosmos node (optional)
# This will run immediately before the binary start command
# pre_start_command: "echo 'About to start the node'"

# Command to execute after cosmos node starts and specific pattern is detected (optional)
# This will run after the node starts and the post_start_pattern is found in the output
# post_start_command: "echo 'Node started and pattern detected'"

# Pattern to search for in cosmos node output (optional)
# When this pattern is found in the node output, the post_start_command will be executed
# Can be any message you want to wait for after node startup
# post_start_pattern: "committed state"

# Whether to stop the cosmos node and exit the program after executing post_start_command (optional)
# If true, the cosmos node will be terminated and the program will exit after post_start_command completes
# stop_after_post_start: false

# Configuration overrides for app.toml
# These values will be merged with the existing app.toml file
app_yaml:
  api:
    enable: true
    swagger: true
  grpc:
    enable: true
  pruning: "custom"
  pruning-keep-recent: "100"
  pruning-interval: "10"

# Configuration overrides for config.toml
# These values will be merged with the existing config.toml file
config_yaml:
  rpc:
    laddr: "tcp://0.0.0.0:26657"
  p2p:
    seeds: "seed1.example.com:26656,seed2.example.com:26656"
    persistent_peers: "peer1.example.com:26656,peer2.example.com:26656"